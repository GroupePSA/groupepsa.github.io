openapi: 3.0.0
servers:
  - url: 'https://api.mpsa.com/api/connectedcar/v2'
info:
  version: '2.0'
  title: Groupe PSA Connected Car API
  description: >
    *PSA B2C Connected Car API*
    
   
    # Introduction

    This is the description of the *Groupe PSA Connected Car V2 API*. The
    speccification is  is based on **OpenAPI Specification version 3** and can be displayed via [ReDoc](https://github.com/Rebilly/ReDoc)a or
    [Swagger](http://swagger.io).
      This API allows applications to fetch data from the connected Vehicles data platform.
    # Authentication

    PSA Connected Car APIs uses the [OAuth
    2.0](https://tools.ietf.org/html/rfc6749) protocol for authentication and
    authorization. any application require a valid [Access
    Token](https://tools.ietf.org/html/rfc6749#section-1.4) to access to user
    data.
    
    # Errors:
      Error codes returned by all REST APIs comply with the standard. Nevertheless, PSA Services (callers) need to have more complete data structures (even when the answer is not Http-OK) to better detail the type of error by providing application code, message and a debugging code(for investigation purposes). The http code of the response is managed by the protocol itself (in the header).
      
      **Errors are  returned as a generic error response:**
       * ```xError``` object model.    
  license:
    name: Groupe PSA Licence
    url: 'https://www.psa-peugeot-citroen.com/'
tags:
  - name: User
  - name: Vehicles
    description: Access to Vehicles details.
  - name: Trips
    description: Describe Trips of a a User or Vehicle
paths:
  /user:
    get:
      tags:
        - User
      summary: User's information
      description: Returns the User's information.
      operationId: getUser
      parameters:
        - $ref: '#/components/parameters/tokenAuth'
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: User not found
          $ref: '#/x-fragment/general_error_fragment'
  /user/vehicles:
    get:
      tags:
        - Vehicles
      summary: List of vehicules
      description: Returns the Vehicles associated with the User.
      operationId: getVehiclesByDevice
      parameters:
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Vehicle_read
      responses:
        '200':
          description: OK
          content:
            'application/hal+json ':
              schema:
                $ref: '#/components/schemas/Vehicles'
        default:
          description: Vehicle not found
          $ref: '#/x-fragment/general_error_fragment'
  '/user/vehicles/{id}':
    get:
      tags:
        - Vehicles
      summary: Details of vehicule
      description: Returns detailed information about a Vehicle.
      operationId: getVehicleByid
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Vehicle_read
      responses:
        '200':
          description: OK
          content:
            'application/hal+json ':
              schema:
                $ref: '#/components/schemas/Vehicle'
        default:
          description: Vehicle not found
          $ref: '#/x-fragment/general_error_fragment'
  '/user/vehicles/{id}/telemetry':
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Vehicles
      description: >-
        Returns the latest Telemetry messages that occurred during a selective
        timestamp-ranges and bounded by an index range.
      operationId: getTelemetry
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/telemetryType'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
        - $ref: '#/components/parameters/extension'
      security:
        - Vehicle_auth:
            - Telemetry_read
            - Vehicle_read
      responses:
        '200':
          $ref: '#/components/responses/TelemetrySuccessResponse'
        default:
          $ref: '#/components/responses/TelemetryFailedResponse'
  '/user/vehicles/{id}/lastPosition':
    get:
      tags:
        - Vehicles
      summary: Last position identified
      description: Returns the latest GPS Position of the Vehicle.
      operationId: getCarLastPosition
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - localisation_read
            - Vehicle_read
      responses:
        '200':
          description: Position response
          content:
            application/vnd.geo+json:
              schema:
                $ref: '#/components/schemas/Position'
        default:
          description: Vehicle not found
          $ref: '#/x-fragment/general_error_fragment'
  '/user/vehicles/{id}/collisions':
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Vehicles
      description: >-
        Returns the set of Collisions that occurred for a given vehicle (id)
        during the timestamp ranges and bounded by an index range.
      operationId: getVehicleCollision
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Collision_read
            - Vehicle_read
      responses:
        '200':
          $ref: '#/components/responses/CollisionsSuccessResponse'
        default:
          $ref: '#/components/responses/CollisionFailedResponse'
  '/user/vehicles/{id}/collisions/{cid}':
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Vehicles
      description: Returns the Collision that matches the vehicle id and the Collision cid.
      operationId: getVehicleCollisionById
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/collisionId'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Collision_read
            - Vehicle_read
      responses:
        '200':
          $ref: '#/components/responses/CollisionsuccessResponse'
        default:
          $ref: '#/components/responses/CollisionFailedResponse'
  '/user/vehicles/{id}/maintenance':
    get:
      tags:
        - Vehicles
      description: Returns the latest Maintenance information for a Vehicle.
      operationId: getVehicleMaintenance
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Maintenance_read
            - Vehicle_read
      responses:
        '200':
          description: Maintenant response
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Maintenance'
        default: 
          $ref: '#/x-fragment/general_error_fragment'
          
  '/user/vehicles/{id}/status':
    get:
      tags:
        - Vehicles
      description: Returns the latest vehicle status.
      summary: Vehicle status.
      operationId: getVehicleStatus
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Status_read
            - Vehicle_read
      responses:
        '200':
          description: Status response
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Status'
        default:
          $ref: '#/x-fragment/general_error_fragment'          
          
  '/user/vehicles/{id}/alerts':
    get:
      tags:
        - Vehicles
      description: Returns the latest alert messages for a Vehicle.
      operationId: getVehicleAlerts
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
        
        - $ref: '#/components/parameters/locale'
        - name: locale
          in: query
          description: >-
            Locale is used for rendering text, correctly displaying regional
            monetary values, time and date formats.
          required: false
          schema:
            type: string
      security:
        - Vehicle_auth:
            - alert_read
            - Vehicle_read
      responses:
        '200':
          $ref: '#/components/responses/AlertsucessResponses'
        default:
          $ref: '#/components/responses/AlertFailedResponse'
  '/user/vehicles/{id}/alerts/{aid}':
    get:
      tags:
        - Vehicles
      description: Returns information about a specific alert messages for a Vehicle.
      operationId: getVehicleAlertsById
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/alertId'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - alert_read
            - Vehicle_read
      responses:
        '200':
          $ref: '#/components/responses/AlertsucessResponse'
        default:
          $ref: '#/components/responses/AlertFailedResponse'
  '/user/vehicles/{id}/monitors':
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Vehicles
      description: Returns the list of subscribed Monitors for a Vehicle.
      operationId: getVehicleMonitors
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
          in: query
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/MonitorsucessResponses'
        default:
          $ref: '#/components/responses/MonitorFailedResponse'
    post:
      deprecated: true
      tags:
        - Vehicles
      summary: Create a new Monitor. OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      description: |
                    >Create a Monitor for a Vehicle. This is a kind of vehicle monitor that generates an event following the transition state of one of the (monitored) data  of the vehicles. As for example the fuel level, the moving out of a defined geographical area. 
                    
                    >When the the trigger occurs, the built event expressed as a JSON object will be sent over the callback.
      operationId: setVehicleMonitor
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'

      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/MonitorParameter'
      security:
        - Vehicle_auth:
            - Vehicle_read
            - Monitor_write
      responses:
        201:
          $ref: '#/components/responses/MonitorsuccessPostResponse'
        default:
          $ref: '#/components/responses/MonitorFailedResponse'
          
  '/user/vehicles/{id}/monitors/{mid}':
    put:
      deprecated: true
      tags:
        - Vehicles
      summary: Update and existing Monitor. OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      description: |
                    Update an existing ```Monitor``` that has been posted (and accepted previously) for this vehicle. The monitor object (body) provided should be complete because the aggregation is not supported for the update of the ```monitor```. you can retrieve this object using the ```GET /monitor/{mid}``` API then modify it and finally publish it (via this ```PUT API```) 
      operationId: updateFleetVehicleMonitor
      parameters:
        - $ref: '#/components/parameters/monitorId'
        - $ref: '#/components/parameters/vehicleId'
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/MonitorParameter'
      responses: 
        201:
          $ref: '#/components/responses/MonitorsuccessPostResponse'
        default:
          $ref: '#/components/responses/MonitorFailedResponse'
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Vehicles
      description: Returns information about a specific Monitor for a Vehicle.
      operationId: getVehicleMonitorsById
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/monitorId'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Monitor_read
            - Vehicle_read
      responses:
        '200':
          $ref: '#/components/responses/MonitorsucessResponse'
        default:
          $ref: '#/components/responses/MonitorFailedResponse'
    delete:
      deprecated: true
      tags:
        - Vehicles
      summary: Delete a Monitor. OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      description: Stop (disable) an existing Monitor.
      operationId: deleteMonitordd
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/monitorId'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Vehicle_read
            - Monitor_write
      responses:
        '200':
          description: Monitor deleted
        default:
          description: Vehicle not found
  '/user/vehicles/{id}/monitors/{mid}/status': 
    put:
      deprecated: true
      tags:
        - Vehicles
      summary: Set a new monitor status. OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      description: |
                   Set monitor status. 
      operationId: setFleetVehicleMonitorStatus
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/monitorId'
      requestBody:
        content:
          application/json:
            schema:
                  type: string
                  enum: [Running, Paused]
                #DataMonitorParm
      responses: #MonitorId
        200:
          $ref: '#/components/responses/MonitorsuccessPostResponse'
        default:
          $ref: '#/components/responses/MonitorFailedResponse'        
 
  '/user/trips':
    $ref: '#/x-fragment/User_Trips_getter'
  '/user/trips/{tid}':
    $ref: '#/x-fragment/User_Trip_id_getter'
  '/user/trips/{tid}/ecoaching':
    $ref: '#/x-fragment/User_Trip_id_ECoaching_getter'
  '/user/trips/{tid}/alerts':
    $ref: '#/x-fragment/User_Trip_id_Alerts_getter'
  '/user/trips/{tid}/alerts/{aid}':
    $ref: '#/x-fragment/User_Trip_id_Alerts_id_getter'
  '/user/trips/{tid}/collisions':
    $ref: '#/x-fragment/User_Trip_id_Collisions_getter'
  '/user/trips/{tid}/collisions/{cid}':
    $ref: '#/x-fragment/User_Trip_id_Collisions_id_getter'
  '/user/trips/{tid}/wayPoints':
    $ref: '#/x-fragment/User_Trip_id_wayPoints_getter'
  '/user/trips/{tid}/telemetry':
    $ref: '#/x-fragment/User_Trip_id_Telemetry_getter'
  '/user/vehicles/{id}/trips':
    $ref: '#/x-fragment/Vehicle_id_Trips'
  '/user/vehicles/{id}/trips/{tid}':
    $ref: '#/x-fragment/Vehicle_id_Trip_id'
  '/user/vehicles/{id}/trips/{tid}/ecoaching':
    $ref: '#/x-fragment/Vehicle_id_Trip_id_ECoaching_getter'
  '/user/vehicles/{id}/trips/{tid}/alerts':
    $ref: '#/x-fragment/Vehicle_id_Trip_id_Alerts_getter'
  '/user/vehicles/{id}/trips/{tid}/alerts/{aid}':
    $ref: '#/x-fragment/Vehicle_id_Trip_id_Alerts_id_getter'
  '/user/vehicles/{id}/trips/{tid}/collisions':
    $ref: '#/x-fragment/Vehicle_id_Trip_id_Collisions_getter'
  '/user/vehicles/{id}/trips/{tid}/collisions/{cid}':
    $ref: '#/x-fragment/Vehicle_id_Trip_id_Collisions_id_getter'
  '/user/vehicles/{id}/trips/{tid}/wayPoints':
    $ref: '#/x-fragment/Vehicle_id_Trip_id_wayPoints_getter'
  '/user/vehicles/{id}/trips/{tid}/telemetry':
    $ref: '#/x-fragment/Vehicle_id_Trip_id_Telemetry_getter'
 
components:
  securitySchemes:
    Vehicle_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://api.mpsa.com/api/connectedcar/v2/oauth/authorize'
          scopes:
            localisation_read: read location related data
            Telemetry_read: read Telemetry related data
            Maintenance_read: read Maintenance related data
            Collision_read: read Collision related data
            Trip_read: read Trip related data
            alert_read: read alert related data
            alert_write: 'create, modify or delete alerte'
            Vehicle_read: read Vehicle related data
            Status_read: read Vehicle related status
  schemas:
    Tab_Links:
      description: >
        [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language#Convention)
        (Hypertext Application Language) link collection
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        first:
          $ref: '#/components/schemas/Link'
        next:
          $ref: '#/components/schemas/Link'
        prev:
          $ref: '#/components/schemas/Link'
        last:
          $ref: '#/components/schemas/Link'
   
    CollectionResult:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Tab_Links'
        total:
          type: integer
        totalPage:
          type: integer
        currentPage:
          type: integer
        _embedded:
          type: object
      required: [total, totalPage, currentPage, _embedded]
        
   
    Alert:
      allOf:
        - $ref: '#/components/schemas/UpdatedField'
        - $ref: '#/components/schemas/CreatedAtField'
        - title: Alert message
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  $ref: '#/components/schemas/link'
                vehicle:
                  $ref: '#/components/schemas/link'
                position:
                  $ref: '#/components/schemas/link'
                trip:
                  $ref: '#/components/schemas/link'
            id:
              type: string
            active:
              type: boolean
            type:
              $ref: '#/components/schemas/AlertMsgEnum'
            startedAt:
              description: Date 
              type: string
              format: date-time
            endAt:
              type: string
              format: date-time
            startPosition:
              allOf:
                - $ref: '#/components/schemas/Position'
                - description: The position (last hvehicle known one) where the alert disappear.
            endPosition::
              allOf:
                - $ref: '#/components/schemas/Position'
                - description: The position (last hvehicle known one) where the alert occurs. 
        
          
   
    Monitor:
      title: Monitor
      description: Monitor state object
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            fleet:
              $ref: '#/components/schemas/Link'
        id:
          $ref: '#/components/schemas/MonitorId'
        monitor:
          $ref: '#/components/schemas/MonitorParameter'
        status:
          $ref: '#/components/schemas/MonitorStatus'
      required: [status,id,monitor]
  
    MonitorId:
      type: string
      description: Uniq monitor ID returned when the monitor was created succefuly.
  
   
          
    MonitorStatus:
      type: string
      enum: [Running, Paused, Failed]
      
    
                    
    MonitorParameter:
      title: MonitorParameter
      description: MonitorParameter
      properties:
            label:
              type: string
              description: Monitor lablel (usually its name).
            locale:
              type: string
              pattern: \w(-\w)?
              description: |
                Locale is used for rendering text according to language and country for. It should match the  REGEX ```\w(-\w)?```. For more details about possible standard values, please refer to [locals list](https://en.wikipedia.org/wiki/Language_localisation). 
            subscribeParam:
              $ref: '#/components/schemas/MonitorSubscribe'
            extendedEventParam:
              type: array 
              items:
                 enum: [door.state, vehicle.status, vehicle.maintenance,vehicle.position, vehicle.telemetry, alerts]
              description: | 
                            Allow to set extra vehicle data (defined in data model) to add to the monitor event
                            when publishing. The possible values are
                            
                            
                            |value|description|Related model |
                            |----------|:-------------|------:|
                            |vehicle.doorsState|Latest know door state (timestamped)|DoorState|
                            |vehicle.status|Latest know vehicle status (timestamped)|Status|
                            |vehicle.maintenance|Latest know maintenance(timestamped)|Maintenance|
                            |vehicle.position|Last vehicle position (timestamped)|Position|
                            |vehicle.alerts|List of active alerts|Alert|
                            |vehicle.telemetry${.TelemetryEnum}|Latest known telemetry (timestamped). |Telemetry
                            
                            * For telemetry extension:  
                              * The suffix ```${.TelemetryEnum}``` can be selected to refine with telemetry type (from the TelemetryEnum list). This value (with suffix) can be selected **_several times_** to included suitable telemetry messages with the extention.
                              * Using ```vehicle.telemetry``` without suffix means to include all available telemetries. 
                     
              
            triggerParam:
              properties:
                          timeZoneTriggers: 
                             $ref: '#/components/schemas/TimeZoneTrigger'
                          dataTriggers:
                            description: Compound data triggers (will be evaluated with an AND relationship)
                            type: array
                            items:
                                $ref: '#/components/schemas/DataTrigger'
      required: [subscribeParam,triggerParam,label]
    MonitorRef: 
      type: object
      description: Monitor creation reference returned when posting a new monitor.
      properties:
            _links:
                type: object
                properties:
                  vehicle:
                    $ref: '#/components/schemas/link'
                  monitor:
                    $ref: '#/components/schemas/link'
                  delete:
                    $ref: '#/components/schemas/link'
            monitorId:
              $ref: '#/components/schemas/MonitorId'
            
                 
    ZoneTrigger:
      title: ZoneTrigger
      description: Zone Alert parameter object
      properties:
            transition:
              description: >-
                Zone monitoring type ('In' for monitoring entering zone and 'Out' formonitoring leaving zone),
              type: string
              enum:
                - In
                - Out
            place:
                    description: >-
                      Circle zone is compound of a center point and a radius.
                    required:
                      - center
                      - radius
                    properties:
                      radius:
                        description: Circle radius (expressed in KM)
                        type: number
                      center:
                        type: object
                        properties:
                          longitude:
                            type: number
                            format: double
                          latitude:
                            type: number
                            format: double
                        required: [longitude, latitude]
      required: [place, transition]
      example: 
                        transition: Out
                        circle:
                          radius: 20
                          center:
                            longitude: 2.333333
                            latitude:  48.866667
    
    TimeTrigger:
      title: TimeTrigger
      description: Temporal monitor for triggering vehicle moving event within a time interval.
      properties:
            
            times:
              type: array
              items:
                $ref: '#/components/schemas/BoundedProgram'
            time.zone: 
              type: string
              pattern: \w?/\w?
              default: Europe/Paris
              description: The standard time [zone code](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the region where to apply this time trigger monitor. 
                  This allows to adapt this trigger to the time change according to local (region/country) criteria/rules.
                  
    TimeZoneTrigger:
      title: TimeZoneTrigger
      description: Zone & temporal monitor. 
      properties:
            zoneTrigger:
                $ref: '#/components/schemas/ZoneTrigger'
            timeTrigger:
              $ref: '#/components/schemas/TimeTrigger'
            
           
    
    DataTrigger:
      title: DataTrigger
      description: A monitor for triggering the vehicle data change event.
      properties:
        data:
          description: | 
            The left operand of the trigger function. The following Table details for each operand data its type, the supported operator and the possibly retruned value: 
            |**Data**|**Type**|**Op**|**Value**|
            |---|---| ---:| ---:|
            | Vehicle.alert | List of value | OnChange (at least one)/IncludedIn/EqualTo | Value (ObjetAlert) |
            | Vehicle.odometer | Integer | equalTo/greaterThan/lowerThan/ | Value |
            | vehicle.engines.running (boolean) | Boolean | OnChange/equalTo | Value (true/false) |
            | vehicle.engines.thermic.oil.temp | Integer | equalTo/greaterThan/ lowerThan/ | Value |
            | vehicle.energy.electric.level | Number | equalTo/greaterThan/ lowerThan/ | Value |
            | vehicle.energy.electric.autonomy | Number | equalTo/greaterThan/ lowerThan/ | Value |
            | vehicle.energy.fuel.level | Number | equalTo/greaterThan/ lowerThan/ | Value |
            | vehicle.energy.fuel.autonomy | Number | equalTo/greaterThan/ lowerThan/ | Value |
            | vehicle.autonomy (global) | Number | equalTo/greaterThan/ lowerThan/ | Value |
            | vehicle.energy.charging.status | Enum(ChargingStatusEnum) | OnChange/equalTo | Value |
            | vehicle.energy.charging.plugged | Boolean | OnChange/equalTo | Value |
            | vehicle.doorsState.lockedState | N/A | OnChange | Value |
            | vehicle.doorsState.opening | N/A | OnChange | Value |
            | vehicle.kinetic.moving| Boolean | OnChange/equalTo | Value (true/false) |
            | vehicle.kinetic.speed | Number | equalTo/greaterThan/ lowerThan/ | Value |
            | vehicle.trip| Literal | OnChange| Value(IDTRIP) |
            | vehicle.maintenance.daysBeforeMaintenance, | Number | OnChange/equalTo/ greaterThan/ lowerThan/ | Value |
            | vehicle.maintenance.mileageBeforeMaintenance| Number | OnChange/equalTo/ greaterThan/ lowerThan/ | Value |
            | vehicle.safety.beltWarning | Enum(beltWarning) | OnChange/equalTo | Value |
            | environment.air.temp | Number | equalTo/greaterThan/lowerThan/ | Value |
            | privacy.state | Enum(Privacy) | equalTo / OnChange/IncludedIN | Value |

          type: string
          enum:
            - vehicle.alert
            - vehicle.odometer
            - vehicle.engines.running
            - vehicle.engines.thermic.oil.temp
            - vehicle.energy.electric.level
            - vehicle.energy.electric.autonomy
            - vehicle.energy.fuel.level
            - vehicle.energy.fuel.autonomy
            - vehicle.autonomy
            - vehicle.energy.charging.status
            - vehicle.energy.charging.plugged
            - vehicle.doorsState.lockedState
            - vehicle.doorsState.opening
            - vehicle.kinetic.moving
            - vehicle.kinetic.speed
            - vehicle.trip
            - vehicle.maintenance.daysBeforeMaintenance
            - vehicle.maintenance.mileageBeforeMaintenance
            - vehicle.safety.beltWarning
            - environment.air.temp
            - privacy.state
        op:
            description: The operator of the trigger function.                          
            type: string
            enum: [equalsTo, greaterThan, lowerThan, includedIn, onChange]
        value:
            description: |
              The right operand of the trigger function. It can be a uniq ```value``` or a list of value ```values```. The choice of one or the other depends on ```OP```  which in the case of ```includedIn``` must be a list.
                * _Disclaimer_: If the op field is not set to ```includeIn``` then only the first item will be used.
            type: array
            items:
              type: string
                
           
      required: [data,op]
   
    
    Url:
      type: string
      description: >-
        URL format follows [RFC 3986](https://tools.ietf.org/html/rfc3986) and
        usually looks like this ` scheme://host[:port][/Path] `
    Link:
      type: object
      description: >-
        A Link Object as defined by [JSONHAL#Link
        Object](https://tools.ietf.org/html/draft-kelly-json-hal-08#section-5).
      required:
        - href
      properties:
        href:
          $ref: '#/components/schemas/Url'
        templated:
          type: boolean
          description: >-
            SHOULD be true when the Link Object's "href"   property is a URI
            Template
        type:
          type: string
          description: >-
            a hint to indicate the media type  expected when dereferencing the
            target resource.
        deprecation:
          allOf:
            - $ref: '#/components/schemas/Url'
            - description: >-
                indicates that the link is to be deprecated (i.e. removed) at a
                future date.  Its value is a URL that SHOULD provide further
                information about the deprecation.
        name:
          type: string
        title:
          type: string
          description: >-
            Its value is a string and is intended for labelling the link with a
            human-readable identifier (as defined by
            [RFC5988](https://tools.ietf.org/html/rfc5988)).
        profile:
          type: string
          description: >-
            Its value is a string and is intended for indicating the language of
            the target resource (as defined by [RFC5988]).
        hreflang:
          type: string
          description: >-
            Its value is a string which is a URI that hints about the profile
            (as defined by
            [I-D.wilde-profile-link](https://tools.ietf.org/html/draft-kelly-json-hal-08#ref-I-D.wilde-profile-link))
            of the target resource.
    
    MonitorSubscribe:
      description: monitor  parameter object
      type: object
      properties:
        retryPolicy:
          type: object
          description: The retry policy to apply when notification failed.
          required: [policy]
          properties:
            policy:
              type: string
              description: |
                          Defines the retry rules following a WebHook notification failure (ie the return code is not HTTP 2XX). '_None_' means with a single try, '_Bounded_' with a limited number of tries and '_Always_'  with an infinite number of tries. 
              enum: [None, Bounded, Always]
            maxRetryNumber:
                description: Maximum number of attempts (to be used with retryPolicy set to Bounded).
                type: integer
                default: 3
                minimum: 1
            retryDelay:
                description: Time to wait (expressed in seconds) befor retrying to push a notification.
                type: integer
                default: 10
                minimum: 1 
        batchNotify:
                description: Notification batch of events defined by a time wiretryPolicyndow and/or batch size. If this field is not set, the call-bak will post only one event by call.
                  **At least one of the two parameters must be provided**
                type: object
                properties:
                  size:
                    type: number
                    description: Batch size
                  timeWindow:
                    type: number
                    default: 300
                    minimum: 60
                    description: Notification batch window size (expressed in seconds).
        refreshEvent:
                description:  Define the period (in sec.) between two refresh events. The refresh-events are sent when the condition of the monitor is satisfied (Trigger -> toggled true).A kind of periodic reminder.
                type: number
                format: int
                minimum: 60
        callback:
            $ref: '#/components/schemas/MonitorWebhook'
      required: [callback]
                 

            
              
    ZoneMonitorTrigger:
      title: ZoneMonitorTrigger
      description: Spatial Alert parameter object
      properties:
            type:
              type: string
              default: Spacial
            within:
              description: >-
                containing mode. i.e wayPoints (such as Trip) start and /or end
                within or cross the container,
              type: string
              enum:
                - start
                - stop
                - startOrStop
                - startAndStop
                - crossing
            place:
              oneOf:
                - $ref: '#/components/schemas/CircleZone'
                - $ref: '#/components/schemas/PolygonZone'
    TimeMonitorTrigger:
      title: TimeMonitorTriggereter
      description: Temporal monitor for triggering vehicle moving event within a time interval.
      properties:
            type:
              type: string
              default: Temporal
            times:
              type: array
              items:
                $ref: '#/components/schemas/timeRange'
    TimeZoneMonitorTrigger:
      title: TimeZoneMonitorTrigger
      description: Spatial & temporal monitor. 
      allOf:
        - $ref: '#/components/schemas/TimeMonitorTrigger'
        - $ref: '#/components/schemas/ZoneMonitorTrigger'
        - properties:
            type:
              type: string
              default: SpacialTemporal
              
    DataMonitorTrigger:
                title: DataMonitorParm
                description: A monitor for triggering the vehicle data change event.
                properties:
                        data:
                            description: the left operand of the trigger function. 
                            type: string
                            enum:
                                - vehicle.alert
                                - vehicle.odometer
                                - vehicle.moving
                                - vehicle.running
                                - vehicle.engines.oil.temp
                                - vehicle.energy.level
                                - vehicle.energy.consumption  
                                - vehicle.energy.autonomy
                                - vehicle.doorsState.lockedState
                                - vehicle.doorsState.opening
                                - vehicle.energy.charging.status
                                - vehicle.energy.charging.plugged
                                - vehicle.speed
                                - vehicle.autonomy
                                - vehicle.energy.fuel.level
                                - vehicle.energy.electric.level
                                - vehicle.new.trip
                                - passenger.seatbelt.unbuckled
                                - environment.air.temp
                        op:
                            description: the operator of the trigger function.                          
                            type: string
                            enum: [eqaualsTo, greaterThan, lowerThan, includedIn]
                        value:
                          description: the right operand of the trigger function. 
                          oneOf:
                            - type: string
                            - type: array
                              items:
                                type: string
  
      

    CollisionObj:
     allOf:
        - $ref: '#/components/schemas/TimeStamped'
        - title: Collision
          type: object
          properties:
            
            id:
              type: string
            rollOver:
              type: boolean
            rear:
              type: object
              properties:
                level:
                  type: string
                  default: none
                  enum:
                    - none
                    - low
                    - medium
                    - high
                    - fixable
            front:
              type: object
              properties:
                level:
                  type: string
                  default: none
                  enum:
                    - none
                    - low
                    - medium
                    - high
                    - fixable
            lateral:
              type: object
              properties:
                level:
                  type: string
                  default: none
                  enum:
                    - none
                    - low
                    - medium
                    - high
                    - fixable
            pedestrian:
              type: boolean
            updatedAt:
              type: string
              format: date-time
            _embedded:
              type: object  
    Collision:
     allOf:
        - $ref: '#/components/schemas/TimeStamped'
        - $ref: '#/components/schemas/CollisionObj'
        - title: Collision
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  $ref: '#/components/schemas/Link'
                vehicle:
                  $ref: '#/components/schemas/Link'
                trip:
                  $ref: '#/components/schemas/Link'
           
    
    ECoaching:
      title: ECoaching response
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'
            vehicle:
              $ref: '#/components/schemas/link'
            trip:
              $ref: '#/components/schemas/link'
       
        scores:
          type: array
          items:
              type: object
              properties:
                category:
                  type: string
                  description: category of the score. Global, ACCELERATION, BREAKING, A/C system, Runing cold engine, Direct Shift Gear, Speed, STT system, ZEV (Zero emission vehicle).
                  enum: [Global, Acceleration, Break, AirCondioner, ColdEngine, TirePressure, Slope, Speed, StartStop]
                score:
                  type: number
                  minimum: 0
                  maximum: 10
       
        _embedded:
          type: object
    
    Engine:
      type: object
      properties:
        type:
                type: string
                default: Thermic
                enum:
                  - Thermic
                  - Electric
        oil:
          type: object
          properties:
            temp:
              type: number
        speed:
          type: number
        
    Event:
      allOf:
        - $ref: '#/components/schemas/UpdatedField'
        - $ref: '#/components/schemas/CreatedAtField'
        - title: Event message
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  $ref: '#/components/schemas/link'
            id:
              type: string
            type:
              type: string
              enum:
                - Trip
                - Refuel
                - FuelStolen
                - Alert
                - Collision
            eventId:
              type: string
            _embedded:
              type: object
          required:
            - _links
    Maintenance:
      allOf:
        - $ref: '#/components/schemas/UpdatedField'
        - $ref: '#/components/schemas/CreatedAtField'
        - title: Maintenance response
          description: >-
            Expresses next Maintenance destails. Such as number of days and the
            mileage till the next Maintenance.
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  $ref: '#/components/schemas/link'
                vehicle:
                  $ref: '#/components/schemas/link'
                alerts:
                  $ref: '#/components/schemas/link'
            daysBeforeMaintenace:
              type: integer
            mileageBeforeMaintenance:
              type: integer
            _embedded:
              type: object
              properties:
                odometer:
                  type: number
          required:
            - _links
     
    Ignition:
     allOf:
        - $ref: '#/components/schemas/UpdatedField'
        - type: object
          properties:
            type:
                type: string
                enum: [Stop, StartUp, Start, Free]
    OverallAutonomy:
      allOf:
        - $ref: '#/components/schemas/CreatedAtField'
        - type: object
          properties:
            autonomy:
                  description: Vehicle global autonomy expressed in KM.
                  type: number
               
           
    VehicleOdometer: 
      allOf:
        - $ref: '#/components/schemas/CreatedAtField'
        - type: object
          properties:
            mileage:
                  description: Vehicle mileage expressed in KM.
                  type: number
    TimeStamped:
      properties:
        createdAt:
              type: string
              format: date-time 
    
    Adas:  
                type: object
                properties:
                  parkAssist:
                    type: object
                    properties:
                      front:
                        type: array
                        items:
                          type: string
                          enum:
                            - Fault
                            - DriverInhibition
                            - Active
                            - Wait
                            - OutOfService 
                      rear:
                        type: array
                        items:
                          type: string
                          enum:
                            - Fault
                            - DriverInhibition
                            - Active
                            - Wait
                            - OutOfService 
                  accr:
                    description: Adaptive Cruise Control Regulation
                    type: string
                    enum:
                      - Activated
                      - Fault
                      - Hold
                      - HoldWithOverSpeeding
                      - Off
                  lvv:
                    type: boolean
                  rvv:
                    type: string
                    enum:
                      - off
                      - Inactive
                      - Active
                      - SpeedExceeded
                      - Disabled
                      - DisabledBySystem
                      - MaxSpeedExceed
                      - SpeedDeltaExceed
                      - ReducedVisibility
                      - Learning
                  aebs:
                    description: Advanced Emergency Braking System
                    type: string
                    enum:
                      - off
                      - Fixed
                      - OnFlashing
                  afil:
                    description: Lane Departure Warning System
                    type: string
                    enum: [FlashingFault, FlashingWarning, Off, OnFixed]
                  artiv:
                    description: Respect of inter vehicle time assist (ARTIV)
                    type: string
                    enum:
                      - NotSelected
                      - Selected
                      - Unavailable
                    default: unavailable
                  bsm:
                    description: Blink SpotMonitoring
                    type: string
                    enum:
                      - Active
                      - Inactive
                      - Disabled
                  esp:
                    description: Electronic Stability Programme
                    type: boolean
                  abs:
                    description: Anti-lock braking system
                    type: boolean
                  fse:
                    description: Electric brake service
                    type: boolean
                  sli:
                    description: Speed Limit Information
                    type: integer
                  rlka:
                    description: Lane Keeping Assist right
                    type: string
                    enum: [Authorized, CorrectionInProgress, NotAuthorized, NotSelected]
                  lrka:
                    description: Lane Keeping Assist left
                    type: string
                    enum: [Authorized, CorrectionInProgress, NotAuthorized, NotSelected]
         
    Lighting:  
                type: object
                properties:
                  turn:
                    type: array
                    items:
                      type: string
                      enum: [Left, Right]
                  light:
                    type: array
                    items:
                      type: string
                      enum: [Front, Rear]
    
         
    
          
    Kinetic:
        allOf:
            - $ref: '#/components/schemas/TimeStamped'
            - description: |
                          Everything related to the movement of the vehicle. Speed, acceleration..
                            * _Disclaimer_:  ```speed``` and ```acceleration``` (fileds) will never be returned at the same time as the odometer (even if compounded with another data object)
            - properties:
                acceleration:
                  type: number
                  format: float
                speed:
                  type: number
                  format: float
                pace:
                  type: number
                  format: float
                moving:
                  type: boolean          
        
    Privacy:
      allOf:
                - $ref: '#/components/schemas/CreatedAtField'
                - type: object
                  properties:
                    state:
                      type: string
                      enum: [None, Geolocation, Full]
    Battery:
            allOf:
              - $ref: '#/components/schemas/CreatedAtField'
              - description: Describe the car (with combustion engine)  battery status.
                type: object
                properties:
                  voltage:
                    type: number
                    format: float
                  current:
                    type: number
                    format: float
    Safety:
      allOf:
              - $ref: '#/components/schemas/CreatedAtField'
              - type: object
                properties:
                  beltWarning:
                    type: string
                    enum: [Normal, Omission]
                  eCallTriggeringRequest:
                    type: string
                    enum: [AirbagUnabled, NoRequest, Requested]
    ServiceType:
      type: object
      properties:
        updatedAt:
          type: string
          format: date-time
        type:
          type: string
          enum: [Electric, Hybrid, Unknown]
      
    
    DoorsState:
      type: object
      properties:
        updatedAt:
          type: string
          format: date-time
        lockedState:
          type: array
          items:
            type: string
            enum: [ Unlocked, Locked, SuperLocked, DriverDoorUnlocked, CabinDoorsUnlocked, CargoDoorsLocked, CargoDoorsUnlocked, RearDoorsUnlocked, RearDoorsLocked]
        opening:
          type: array
          items:
            type: object
            description: The opening state of a door.
            properties :
              identifier: 
                type: string
                enum: [Driver, Passenger, RearLeft, RearRight, Trunk, RearWindow, RoofWindow]
              state:
                type: string
                enum: [Open, Closed]
          
    Status:
      allOf:
        - $ref: '#/components/schemas/CreatedAtField'
        - title: Vehicle status response
          description: Describe the latest status of the vehicule
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  $ref: '#/components/schemas/link'
                vehicle:
                  $ref: '#/components/schemas/link'
            odometer:
                    deprecated: true
                    description: Measurment the distance travelled by a vehicle.
                    type: number
            autonomy:
                    deprecated: true
                    description: Vehicle energy autonomy expressed in KM.
                    type: number
            vehicleOdometer:
                  $ref: '#/components/schemas/VehicleOdometer'
            timed.odometer:
              allOf:  
                - $ref: '#/components/schemas/VehicleOdometer'  
                - deprecated: true        
            ignition:
                  $ref: '#/components/schemas/Ignition'
            lastPosition:
                  $ref: '#/components/schemas/Position'
            preconditionning:
                  $ref: '#/components/schemas/Preconditioning'
            energy:
                    description: Describe vehicle energy supply for thermic, low emission vehicle or both.
                    type: array
                    items: 
                        $ref: '#/components/schemas/Energy'
            kinetic:
                  $ref: '#/components/schemas/Kinetic'
            doorsState:
                  $ref: '#/components/schemas/DoorsState'
            privacy:
                  $ref: '#/components/schemas/Privacy'
            battery:
                  $ref: '#/components/schemas/Battery'
            service:
                  $ref: '#/components/schemas/ServiceType'
            safety:  
                  $ref: '#/components/schemas/Safety'
            environment: 
                  $ref: '#/components/schemas/Environment'
          required:
            - _links
        
    Vect2D:
      description: >-
        This is a simple 2 (or more) number vector used to define Geometry
        objects.
      type: array
      items:
        type: number
        minItems: 2
    Geometry:
      title: Geometry
      type: object
      description: >-
        This object expresses the Geometry as specified by
        [rfc7946](https://tools.ietf.org/html/rfc7946#section-3.1). It is also
        the root of the Geometry objects (Point, cicle, poygon)
      properties:
        type:
          type: string
          enum:
            - Polygon
            - Point
            - ExtCircle
        coordinates:
          title: Coordinates
          description: Geometry coordinates
      externalDocs:
        url: 'https://tools.ietf.org/html/rfc7946#section-3.1'
      required:
        - coordinates
        - type
    Point:
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - title: Point
          properties:
            type:
              default: Point
              enum:
                - Point
            coordinates:
              $ref: '#/components/schemas/Vect2D'
    PolygonZone:
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - title: Polygon
          properties:
            type:
              default: Polygon
              enum:
                - Polygon
            coordinates:
              type: array
              minItems: 3
              items:
                $ref: '#/components/schemas/Vect2D'
    CircleZone:
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - title: Cicle
          description: >-
            Circle zone is compound of a gps center Point and a radius
            (Expressed in KM).
          properties:
            type:
              default: extCircle
              enum:
                - ExtCircle
            coordinates:
              type: object
              required:
                - center
                - radius
              properties:
                center:
                  $ref: '#/components/schemas/Point'
                radius:
                  type: number
    Position:
      allOf:
        - $ref: '#/components/schemas/UpdatedField'
        - $ref: '#/components/schemas/CreatedAtField'
        - required:
            - Geometry
            - properties
          type: object
          title: Gps Position
          properties:
            type:
              type: string
              default: Feature
              enum:
                - Feature
            geometry:
              $ref: '#/components/schemas/Point'
            properties:
              type: object
              properties:
                heading:
                  type: number
                  format: float
                  minimum: 0
                  maximum: 360
                signalQuality:
                    type: number
                    format: int
                type:
                    type: string
                    enum:
                      - Estimate
                      - Aquire
    Energy:
      type: array
      items: 
        allOf:
          - $ref: '#/components/schemas/UpdatedField'
          - $ref: '#/components/schemas/CreatedAtField'
          - type: object
            description: percentage energy.
            properties :
              type:
                type: string
                enum: [Fuel, Electric]
              level:
                type: number
                format: float
                minimum: 0
                maximum: 100
              consumption:
                description: Instant consumption for thermic vehicles.
                type: number
              autonomy:
                    description: Vehicle autonomy for this energy class expressed in KM.
                    type: number
              residual:
                    description: Residual electric energy avaialble only for electric energy class expressed in KWh.
                    type: number
                    format: float
              battery:
                type: object
                description: Battery capacity and heath for electric energy type.
                properties:
                  capacity:
                    description: Electric battery total capacity (expressed in Wh). 
                    type: number
                    format: float
                  health:
                    type: object
                    properties:
                      capacity:
                        description:  Health related to battery capacity (expressed in persentage).
                        type: number
                        format: int
                      resistance:
                        description:  Health related to battery resistance (expressed in persentage).
                        type: number
                        format: int
              charging:
                    type: object
                    properties:
                      plugged:
                        type: boolean
                      status:
                        $ref: '#/components/schemas/ChargingStatusEnum'
                      remainingTime:
                        description: remaning time before the battery is fully charged. This duraction is expressed using [ISO8601](https://en.wikipedia.org/wiki/ISO_8601#Durations) format.
                        type: string
                      chargingRate:
                        description:  Charging speed (expressed in gained batteryLife per hour -> KM/H).
                        type: integer
                        minimum: 0
                        maximum: 500
                      chargingMode:
                          description:  The charging mode; Slow, Quick and No(not charging).
                          type: string
                          enum: [ No, Slow, Quick ]
                      nextDelayedTime:
                        description:  timestamp ( as defined in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)) of the next battery charging.
                        type: string
    Program:
      type: object
      description: Describe recurring action.
      properties:
        recurrence:
            description: | 
                      
                      Determines the recurrence of the program. 
                      * None: means no recurrence. 
                      * Daily: repeated over the week. 
                      * Weekly: repeated over the weeks of the year from w1 to w52 specified in an array unitary or grouped by ranges (w1, w2,w34-w46, w52).
            type: string
            enum: [None, Daily, Weekly]
            default: Daily
        start:
            type: string
            description: |
                          The program start time formatted using the duration format based on [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) with the schema: P[n]Y[n]M[n]DT[n]H[n]M[n]S
                      
                          _example_: 
                        
                          * PT14H30M :  14H30min
        occurence:
                type: object
                description: >
                   The occurrence on the program will spread on months, weeks, days depending on recurrence value.
                properties:
                    day:
                        type: array
                        items:
                          type: string
                          enum: [Mon, Tue, Wed, Thu, Fri, Sat, Sun]
                    week:  
                        type: array
                        items:
                        #week of year : w1, w2 ... w34-w46 ..
                          type: string
                          format: w[1-5]([0-9])*(-w[1-5]([0-9])*)?
                                  
                required: [day]
      required: [start, recurrence, occurence]

    
    ExtensionType:
      type: array
      items:
        type: string
        enum:
          - location
          - alerts
          - collision
          - maintenance
          
    Extension:
      type: object
      description: Additional data set.
      properties:
        alerts:
              type: array
              items:
                $ref: '#/components/schemas/Alert'
        location:
              $ref: '#/components/schemas/Position'
        collision:
               $ref: '#/components/schemas/Collision'
        maintenance:
               $ref: '#/components/schemas/Maintenance'

    PreconditioningProgram:
      allOf:
        - $ref: '#/components/schemas/Program'
        - title: ProconditionProgram
        - properties:
            enabled:
                type: boolean
                description: > 
            
                          Determines whether this program is enabled or not.
            
            slot:
              description: >
                 The preconditionning program number.
              type: number
              format: int
              
        - required: [enabled]
        
    BoundedProgram:
      allOf:
        -  $ref: '#/components/schemas/Program'
        - description: the extended program that specifies the duration of the action. The relative start time (relative to midnight) must be expressed in UTC.
          properties:
            duration:
              description: Duration of the monitor action expressed using  [ISO-8601 Duration spec](https://en.wikipedia.org/wiki/ISO_8601#Durations)
              type: string
          required: [start, duration, occurence]
          
    Preconditioning:
      type: object
      description: Preconditionning the vehicle for driver and passenger.
      properties:
        airConditioning:
          type : object
          
          properties:
            updatedAt:
              type: string
              format: date-time
            status:
              description: > 
                The status of the preconditionning feature.
              type: string
              enum: [Enabled, Disabled, Finished, Failure]
            failureCause:
              description: failure cause
              type: string
              enum: [ Defect, DoorOpened, LowBattery, LowFuelLevel, TooManyUnusedProg ]
            programs:
              type: array
              items:
                $ref: '#/components/schemas/PreconditioningProgram'
                    

            
            
            
             #*  *2018-01-03T12:00:00+01:00/*  known low limit, hight limit = current time.
            
          #  *  *R5/2018-01-03T12:00:00Z/P6H* repeate duration 6H interval for 5 times starting at 2018-01-03T12:00:00Z.  
        
    TelemetryMessage:
      title: Telemetry message
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'
            vehicle:
              $ref: '#/components/schemas/link'
        id:
          type: string
        privacy:
           $ref: '#/components/schemas/Privacy'
        vehicle:
          type: object
          properties:
            odometer:
             $ref: '#/components/schemas/VehicleOdometer'
            autonomy:
              $ref: '#/components/schemas/OverallAutonomy'
            ignition:
               $ref: '#/components/schemas/Ignition'
              ##### LEV CHANGE HERE
            doorsState:
              $ref: '#/components/schemas/DoorsState'
            kinetic:
               $ref: '#/components/schemas/Kinetic'  
            battery:
              $ref: '#/components/schemas/Battery'
            safety:
              $ref: '#/components/schemas/Safety'
            engines:
              type: array
              items:
                $ref: '#/components/schemas/Engine'
            energy:  
                $ref: '#/components/schemas/Energy'
            brakingSystem:
              type: object
              properties:
                parking:
                  type: boolean
            transmission:
              type: object
              properties:
                gearbox:
                  type: object
                  properties:
                    gear:
                      type: object
                      properties:
                        recommended:
                          type: string
                          enum:
                            - None
                            - Up
                            - Down
                            - UpDown
                    mode:
                      type: object
                      properties:
                        automatic:
                          type: boolean
                        sport:
                          type: boolean
                        snow:
                          type: boolean
            adas:
              $ref: '#/components/schemas/Adas'
            lighting:
              $ref: '#/components/schemas/Lighting'
        environment: 
              $ref: '#/components/schemas/Environment'
          
    Environment: 
          allOf:
            - $ref: '#/components/schemas/UpdatedField'
            - $ref: '#/components/schemas/CreatedAtField'
            - type: object
              properties:
                  luminosity:
                    type: object
                    properties:
                      day:
                        type: boolean
                  air:
                    type: object
                    properties:
                      temp:
                        type: number
    Trip: 
      allOf:
            - $ref: '#/components/schemas/UpdatedField'
            - $ref: '#/components/schemas/CreatedAtField'
            - title: Trip 
              type: object
              properties:
                _links:
                  type: object
                  properties:
                    self:
                      $ref: '#/components/schemas/link'
                    vehicle:
                      $ref: '#/components/schemas/link'
                    waypoints:
                      $ref: '#/components/schemas/link'
                    alerts:
                      $ref: '#/components/schemas/link'
                id:
                  type: string
                  description: Identifier of a trip
                startedAt:
                  type: string
                  format: date-time
                  description: Date & Time when the trip started
                stoppedAt:
                  type: string
                  format: date-time
                  description: Date & Time when the trip stopped
                duration:
                  type: string
                  description: Duration of the trip
                distance:
                  type: number
                  format: float
                  description: Distance in Km of the trip
                zeroEmissionRatio:
                  type: number
                  format: float
                  description: Part of trip distance with zero gaz emission of the trip expressed in percent (0-100%).
                odometer:
                  type: number
                  description: The mileage of the vehicle at the end of a trip
                avgConsumption:
                  type : array
                  items:
                    type: object
                    description: > 
                                Average energy consumption expressed in L/100Km for fuel consumtion and kWh/100km for the electric one.
                    properties:
                      type:
                        type: string
                        enum: [Fuel, Electric]
                      value:
                        type: number
                        format: float
                startPosition:
                  $ref: '#/components/schemas/Position'
                stopPosition:
                  $ref: '#/components/schemas/Position'
                done:
                  description: Determines whether this trip is finished or not.
                  type: boolean
                faults:
                  description: The faults of this finished or in progress trip. This means that we lacked data from the vehicle to complete the trip description during one of its step (starting, progressing, or finishing).
                  type: array
                  items:
                    type: string
                    enum: [Unstarted, DataLacking, Unfinished]
    User: 
      allOf:
            - $ref: '#/components/schemas/UpdatedField'
            - $ref: '#/components/schemas/CreatedAtField'
            - title: User Information
              type: object
              properties:
                _links:
                  type: object
                  properties:
                    self:
                      $ref: '#/components/schemas/link'
                    vehicles:
                      $ref: '#/components/schemas/link'
                email:
                  description: Mail of user
                  type: string
                firstName:
                  description: First name of user
                  type: string
                lastName:
                  description: Last name of user
                  type: string
                _embedded:
                  type: object
                  properties:
                    Vehicles:
                      type: array
                      items:
                        $ref: '#/components/schemas/Vehicle'
    Vehicle: 
      allOf:
            - $ref: '#/components/schemas/UpdatedField'
            - $ref: '#/components/schemas/CreatedAtField'
            - title: Vehicle Information
              type: object
              properties:
                _links:
                  type: object
                  properties:
                    self:
                      $ref: '#/components/schemas/link'
                    lastPosition:
                      $ref: '#/components/schemas/link'
                    trips:
                      $ref: '#/components/schemas/link'
                    telemetry:
                      $ref: '#/components/schemas/link'
                    maintenance:
                      $ref: '#/components/schemas/link'
                    alerts:
                      $ref: '#/components/schemas/link'
                    status:
                      $ref: '#/components/schemas/link'
                id:
                  type: string
                vin:
                  description: Vehicle Identification Number
                  type: string
                brand:
                  description: Brand of a vehicle
                  type: string
                engine:  
                  description: Engine of a vehicle
                  type: array
                  items:
                    type: object
                    properties:
                      class:
                        type: string
                        default: Thermic
                        enum:
                          - Thermic
                          - Electric
                        
                      energy:
                        description: Type of energy of a vehicle (Not available for Electric class)
                        type: string
                        enum:
                          - GPL
                          - Gasoil
                          - Petrol
                          - Biologic
                label:
                  description: Version of a vehicle
                  type: string
                pictures:
                  description: With the links it's possible to see the pictures of the vehicle 
                  type: array
                  minItems: 1
                  maxItems: 12
                  items:
                    $ref: '#/components/schemas/url' 
                _embedded:
                  type: object
    Alerts:
      title: Alerts Array
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - properties:
            _embedded:
              type: object
              properties:
                alerts:
                  type: array
                  items:
                    $ref: '#/components/schemas/Alert'
    Monitors:
      title: Monitors Array
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - properties:
            _embedded:
              type: object
              properties:
                monitors:
                  type: array
                  items:
                    $ref: '#/components/schemas/Monitor'
    Collisions:
      title: Vehicle Collisions array
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - properties:
            _embedded:
              type: object
              properties:
                Collisions:
                  type: array
                  items:
                    $ref: '#/components/schemas/Collision'
  
    WayPoints:
      title: WayPoints of a Trips response
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - properties:
            _embedded:
              type: object
              properties:
                reduced:
                  description: >
                      Determines whether this result set (page) has been reduced due to path simplifying (by providing a tolerance factor). 
                       ### Note: 
                       The number of results may be lower than the specified page 'size' due to the applying of the path simplifying after resolving the page resultset.
                  type: boolean
                positions:
                  type: array
                  items:
                    $ref: '#/components/schemas/Position'
              required:
                  - positions
                  
                  
    Telemetry:
      title: Vehicle Telemetry Information
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - properties:
            _embedded:
              type: object
              properties:
                telemetries:
                  type: array
                  items:
                    $ref: '#/components/schemas/TelemetryMessage'
    Trips:
      title: Trips
      description: List of a Trips response
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - description: List of a Trips response
          properties:
            _links:
              $ref: '#/components/schemas/Tab_Links'
            total:
              type: integer
            totalPage:
              type: integer
            currentPage:
              type: integer
            _embedded:
              type: object
              properties:
                trips:
                  type: array
                  items:
                    $ref: '#/components/schemas/Trip'
    Vehicles:
      title: Vehicle Information
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - title: Vehicle List
          properties:
            _embedded:
              type: object
              properties:
                vehicles:
                  type: array
                  items:
                    $ref: '#/components/schemas/Vehicle'
                
    MonitorWebhook:
      title: Webhook
      description: Defines the webhook monitor notification object.(See  MonitorEvent object model that defines de schema of event)
      type: object
      properties:
        target:
          $ref: '#/components/schemas/Url'
        name:
          type: string
          description: Webhook name.
        attributes:
          type: array
          description: |
            Additional attributes-set that can be used as http header enhencement (such as headers can be used as an authentication parameter when posting the event) or simply added to the notification event body (as set of key/values) or finally as additional query parameters.
          items:
            type: object
            properties:
              type:
                type: string
                enum: [Header, Body, Query]
                description: |
                  3 attributes type:
                  |Attribute-type|Role|
                  |----------|-------------|
                  |Header|-Will be add as http header extension "x-######:"|
                  |Body|-Will be simply add to event body map attribute (see monitor event definition in template document)|
                  |Query|-Will set as http query parameter when invoking the Webhook|
                  
              key:
                type: string
              value:
                oneOf:
                  - type: string
                  - type: string
                    enum: ['vin','monitorID','customerID']
                    description: |
                      Set of variables that will be contextually valued and used as attribute value. To reference the variable, prefix its name with the dollar sign ($)  
                      
                      * Disclaimer: if the var "vin" is used as a query parameter, the batch-notify will be no more possible and each event will be sent through a separated request!.
                      * example: Having a vin=VIN123456, the following attribute set:
                              ```"attributes": [
                                  {
                                    "type": "Header",
                                    "key": "vehicle-id"
                                    "value":"$vin"
                                  }
                                ]```
                        will be valued as http header extension (prefixed x-): 
                                
                        *"x-vehicle-id: VIN123456"*
            required:
              - key
              - value  
              - type
      required:
        - target
        - name
   
    DefaultAlertPush:
      title: DefaultAlertPush
      description: The default alert push mechanism (backend dependant; exp sendbox)
      type: object
      properties:
        name:
          type: string
          description: push event name
        attributes:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
            required:
              - key
              - value
      required:
        - name
    
    url:
      type: string
      description: >-
        URL format follows [RFC 3986](https://tools.ietf.org/html/rfc3986) and
        usually looks like this ` scheme://host[:port][/Path] `
    link:
      type: object
      description: >-
        A Link Object as defined by [JSONHAL#Link
        Object](https://tools.ietf.org/html/draft-kelly-json-hal-08#section-5).
      required:
        - href
      properties:
        href:
          $ref: '#/components/schemas/url'
        templated:
          type: boolean
          description: >-
            SHOULD be true when the Link Object's "href"   property is a URI
            Template
        type:
          type: string
          description: >-
            a hint to indicate the media type  expected when dereferencing the
            target resource.
        deprecation:
          allOf:
            - $ref: '#/components/schemas/url'
            - description: >-
                indicates that the link is to be deprecated (i.e. removed) at a
                future date.  Its value is a URL that SHOULD provide further
                information about the deprecation.
        name:
          type: string
        title:
          type: string
          description: >-
            Its value is a string and is intended for labelling the link with a
            human-readable identifier (as defined by
            [RFC5988](https://tools.ietf.org/html/rfc5988)).
        profile:
          type: string
          description: >-
            Its value is a string and is intended for indicating the language of
            the target resource (as defined by [RFC5988]).
        hreflang:
          type: string
          description: >-
            Its value is a string which is a URI that hints about the profile
            (as defined by
            [I-D.wilde-profile-link](https://tools.ietf.org/html/draft-kelly-json-hal-08#ref-I-D.wilde-profile-link))
            of the target resource.
    tab_links:
      description: >
        [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language#Convention)
        (Hypertext Application Language) link collection
      type: object
      properties:
        self:
          $ref: '#/components/schemas/link'
        first:
          $ref: '#/components/schemas/link'
        next:
          $ref: '#/components/schemas/link'
        prev:
          $ref: '#/components/schemas/link'
        last:
          $ref: '#/components/schemas/link'
    ChargingStatusEnum:
      description: status of charging system.
      type: string
      enum:  [Disconnected, InProgress, Failure, Stopped, Finished]      
    AlertMsgEnum:
      type: string    
      enum:
        - alertOilPressure
        - alertCoolantTemp
        - chargingSystemFault
        - alertBrakeFluid
        - steeringFault
        - alertCoolantLevel
        - laneDepartureWarningSystemFault
        - frontLeftDoorOpenHighSpeed
        - frontRightDoorOpenHighSpeed
        - rearLeftDoorOpenHighSpeed
        - rearRightDoorOpenHighSpeed
        - trunkOpenHighSpeed
        - trunkWindowOpen
        - espFault
        - batteryLevelFault
        - waterInGasoil
        - padWearFault
        - fuelLevelAlarm
        - airbagOrSeatbeltFault
        - engineFault
        - absFault
        - riskOfParticleFilterBlockage
        - particleFilterAdditiveTooLow
        - suspensionFault
        - preaheatingDeactivatedBatteryTooLow
        - preaheatingDeactivatedFuelLevelTooLow
        - checkTheBrakeLamp
        - retractableRoofMechanismFault
        - alertSteeringLock
        - electronicImmobiliserFault
        - roofOperationImpossibleTemperatureTooHigh
        - roofOperationImpossibleStartEngine
        - roofOperationImpossibleApplyParkingBreak
        - hybridSystemFault
        - automaticHeadlampFault
        - hybridSystemFaultRepairedTheVehicle
        - washerLevelAlarm
        - batteryKeyAlarm
        - preaheatingDeactivatedSetTheClock
        - trailerConnectionFault
        - underInflationTyreFault
        - limitedVisibilityAidsCamera
        - electricModeNotAvailable
        - wheelPressureFault
        - checkSideLamps
        - checkRightBrakeLamp
        - checkLeftBrakeLamp
        - frontFoglightFault
        - rearFoglightFault
        - checkDirectionIndicator
        - checkReversingLamp
        - parkingAssistanceFault
        - adjustTyrePressure
        - antipollutionFault
        - placeGearBoxToP
        - riskOfIce
        - frontRightDoorOpen
        - frontLeftDoorOpen
        - rearRightDoorOpen
        - rearLeftDoorOpen
        - trunkOpen
        - bootOpen
        - rearScreenOpen
        - parkingBreakFault
        - activeSpoilerFault
        - automaticBreakingSystemFault
        - directionalHeadlampsFault
        - automaticGearboxFault
        - engineFault
        - suspensionFaultLimitTo90km
        - frontLeftTyreNotMonitored
        - frontRightTyreNotMonitored
        - rearRightTyreNotMonitored
        - rearLeftTyreNotMonitored
        - suspensionFault
        - suspensionFault
        - powerSteeringFault
        - engineFault
        - laneDepartureFault
        - tyreUnderInflation
        - spareWheelFittedDrivingAidsDeactivated
        - automaticBreakingDeactived
        - tupUpAdBlue
        - longPushToUnlockTankFault
    
    TelemetryEnum:
      type: array
      items:
        type: string
        enum:
          - vehicle.odometer
          - vehicle.moving
          - vehicle.running
          - vehicle.engines.oil.temp
          - vehicle.engines.speed
          - vehicle.brakingSystem.parking
          - vehicle.brakingSystem.status
          - vehicle.energy.type
          - vehicle.energy.level
          - vehicle.energy.consumption  
          - vehicle.energy.autonomy
          - vehicle.ignition.
          - vehicle.doorsState.lockedState
          - vehicle.doorsState.opening
          - vehicle.energy.charging.status
          - vehicle.energy.charging.plugged
          - vehicle.energy.charging.remainingTime
          - vehicle.energy.charging.chargingRate
          - vehicle.energy.charging.chargingMode
          - vehicle.energy.charging.nextDelayedTime
          - vehicle.transmission.gearbox.mode.automatic
          - vehicle.transmission.gearbox.mode.sport
          - vehicle.transmission.gearbox.mode.snow
          - vehicle.transmission.gearbox.gear.recommended
          - vehicle.acceleration.longitudinal
          - vehicle.lightingSystem.signal.turn.left
          - vehicle.lightingSystem.signal.turn.right
          - vehicle.lightingSystem.foglight.front
          - vehicle.lightingSystem.foglight.rear
          - vehicle.adas.parkAssist.front
          - vehicle.adas.parkAssist.rear
          - vehicle.adas.aebs
          - vehicle.adas.afil
          - vehicle.adas.artiv
          - vehicle.adas.esp
          - vehicle.adas.abs
          - vehicle.adas.fse
          - vehicle.adas.acc
          - vehicle.adas.lvv
          - vehicle.adas.rvv
          - vehicle.adas.lka.right
          - vehicle.adas.lka.left
          - vehicle.adas.bsm
          - vehicle.adas.sli
          - passenger.seatbelt.unbuckled
          - environment.air.temp
          - environment.luminosity.day
    timeRange:
      type: string
      pattern: \w?/\w?
      description: >
        Times range is the time intervening between two times. The range can be
        expressed by two times Points (start and end *Timestamp*s), by a start
        *Timestamp* Point and a *Duration* or as a repeating interval. All of
        them  should be expressed using the 
        [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) and the interval format
        is based on
        [ISO8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals)


          * 'T1/T2' interval time from low limit T1 to hight T2

          * 'T1/D' interval time from low limit T1 with duration = D ( T2=T1+D)


          * 'T/' endless range, known start Timestamp but no end Timestamp. The current time  will be used as the high time limit.


          * '/T' startless range, known end date but no start date. No lower limit
            will be used to retrieve results.
            
          * Rn/T/D  repeat the interval of D **n** times starting at T.
          
          * R/T/D unbounded number of repetitions starting at T.


            *T is a timestamp and D is a duration  as defined in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt).*


            Example: 
              

            *  *2018-01-01T09:00:00+01:00/2018-01-01T12:00:00+01:00* known low and hight
              limits.

            *  *2018-01-03T12:00:00+01:00/P3Y6M4DT12H30M5S*  known low limit, hight limit = start + duration.

            *  *2018-01-03T12:00:00+01:00/*  known low limit, hight limit = current time.
            
            *  *R5/2018-01-03T12:00:00Z/P6H* repeate duration 6H interval for 5 times starting at 2018-01-03T12:00:00Z.
              
    indexRange:
      type: string
      pattern: \d+-\d*
      default: 0-
      description: >
        Range index  used to express the first (offset) and the last results
        index  to retrieve. With the respect to the regex pattern '\d+(-\d*)?',
        the start of  range is mandatory (use 0 for default).


        *Example:*


        *  '0-9'  : start=0, end=9    ==> offset=0 and number of items=10


        * '5-'    : start =5, no end  ==> start at 5th to the end results.
    xError:
      type: object
      description: Detailed error
      properties:
        code:
          type: integer
        debug:
          type: string
        message:
          type: string
      example:
        code: 1001
        debug: CMP_001234
        message: No data availble for such context.
        
    UpdatedField:
     type: object
     properties:
       updatedAt:
          description: Date when the resource has been updated.
          type: string
          format: date-time
    CreatedAtField:
       type: object
       properties:
          createdAt:
            description: Date when the resource has been created.
            type: string
            format: date-time      
    
        
  parameters:
    tokenAuth:
      name: authorization
      description: >-
        HTTP token authentication (Bearer authentication) that should be
        retrived using PSA connection API.
      in: header
      required: true
      schema:
        type: string
        pattern: Bearer (\w|-|=)*
    genericId:
      name: ''
      required: true
      in: path
      schema:
        type: string
    apiClientId:
      name: client_id
      description: The client ID related to the API User account.
      in: query
      required: true
      schema:
        type: string
        pattern: '([0-9a-fA-F]|-|_)*'
    alertId:
      name: aid
      in: path
      description: id of the alert.
      required: true
      schema:
        type: string
    monitorId:
      name: mid
      in: path
      description: id of the alert.
      required: true
      schema:
        type: string
    collisionId:
      name: cid
      in: path
      description: Results will only contain the Collision related to this Collision *id*.
      required: true
      schema:
        type: string
    vehicleId:
      name: id
      in: path
      description: Results will only be related to this Vehicle *id*.
      required: true
      schema:
        type: string
    tripId:
      name: tid
      in: path
      required: true
      description: the *id* of Trip
      schema:
        type: string
    locale:
      name: locale
      in: query
      description: >-
        Locale is used for rendering text, correctly displaying regional
        monetary values, time and date formats. Respect REGEX \w(-\w)?
      required: false
      schema:
        type: string
    timestamps:
      name: timestamps
      in: query
      description: >-
        Array of **"timestamp"** ranges. Results will contain results whose
        timestamps are included in those date-time ranges (see **timestamp**
        data  model).**"timestamp"** items should be expressed as in
        '[RFC3339](https://www.ietf.org/rfc/rfc3339.txt)'.
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/timeRange'
    pageSize:
      name: pageSize
      in: query
      schema:
        type: integer
        default: 60
        minimum: 1
      required: false
      description: >-
        The maximum number of results (for a collection results response) to
        return per page. When not set, at most 60 results will be returned.
         
    pageToken:
      name: pageToken
      in: query
      schema:
        type: string
      required: false
      description: >-
        Start-Page marker, the token for continuing a previous list request on
        the next page. It is built and used **only** by the server.
    indexRange:
      name: indexRange
      in: query
      schema:
        $ref: '#/components/schemas/indexRange'
      required: false
      description: >-
        Results indexes will be included in this range (see **indexRange**
        model).
          
          default: 0-

          example: 0-, 0-5
    telemetryType:
      name: type
      in: query
      description: >-
        Results will only contain Telemetry messages of this kind. You can add
        more than one message type.
      required: false
      schema:
        $ref: '#/components/schemas/TelemetryEnum'
    
    extension:
      name: extension
      in: query
      description: >-
        Additional data set that will be included in embedded field 
        
         * _Disclaimer_:  **Enabling ```maintenance``` extension will automatically disable ```Kinetic``` telemetry message**
      required: false
      schema:
        $ref: '#/components/schemas/ExtensionType'    
    
    tolerence:
      name: tolerance
      description: >
          Tolerance factor is expressed in length KM unit and is used to simplify path by reducing the total number of points by is using Douglas-Peucker algorithme to find a similar curve with fewer points (find more info here: [Ramer_Douglas_Peucker_algorithm](https://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm#Algorithm) ).
      in: query
      schema:
        type: number
        format: float
#    sampling:
#      name: sampling.
 #     in: query
#      description: >
#        Sampling of returned waypoints. the read sampling expresses number of
#        vehicle's read position time cycle (seconds)between to aquisition.
#      required: false
#      schema:
#        type: integer
  responses:
    CollisionsuccessResponse:
      description: Collision response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Collision'
    CollisionsSuccessResponse:
      description: A list of Collision
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Collisions'
    CollisionFailedResponse:
      description: Collision request error
      $ref: '#/x-fragment/general_error_fragment'
    AlertsucessResponse:
      description: Alert response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Alert'
    AlertsucessResponses:
      description: A list of alert
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Alerts'
    AlertFailedResponse:
      description: Alert request error
      $ref: '#/x-fragment/general_error_fragment'
    MonitorsucessResponse:
      description: Monitor response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Monitor'
    MonitorsucessResponses:
      description: A list of Monitors
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Monitors'
    MonitorsuccessPostResponse:
      description: Monitor post success response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/MonitorRef' 
    MonitorFailedResponse:
      description: Alert request error
      $ref: '#/x-fragment/general_error_fragment'
    TripsucessResponse:
      description: Trip response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Trip'
    TripsSuccessResponses:
      description: A list of Trip
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Trips'
    TripFailedResponse:
      description: Trip request error
      $ref: '#/x-fragment/general_error_fragment'
    TelemetrySuccessResponse:
      description: Telemetry response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Telemetry'
    TelemetryFailedResponse:
      description: Trip request error
      $ref: '#/x-fragment/general_error_fragment'
    ECoaching200ErroResponse:
      description: ECoaching response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/ECoaching'
    ECoachingFailedResponse:
      description: ECoaching request error
      $ref: '#/x-fragment/general_error_fragment'
x-fragment:
  User_Trip_id_Telemetry_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: >-
        Returns the set of Telemetry values that occurred for a given vehicle
        (id) and a speific Trip (tid) during the timestamp ranges and bounded by
        an index range.
      operationId: getTelemetryForTrip
      parameters:
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
        - $ref: '#/components/parameters/telemetryType'
        - $ref: '#/components/parameters/extension'
      security:
        - Vehicle_auth:
            - Trip_read
      responses:
        '200':
          $ref: '#/components/responses/TelemetrySuccessResponse'
        default:
          $ref: '#/components/responses/TelemetryFailedResponse'
  User_Trip_id_wayPoints_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: Gives the wayPoints for a specified User Trip.
      operationId: getPathForTrip
      parameters:
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Trip_read
      responses:
        '200':
          description: Path response
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WayPoints'
        default:
          description: wayPoints not found
  User_Trip_id_Collisions_id_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: >-
        Returns the Collision(cid) that occurred for a given vehicle(id) during
        a Trip(tid) .
      operationId: getUserCollisionByTipById
      parameters:
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/collisionId'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Collision_read
            - Trip_read
      responses:
        '200':
          $ref: '#/components/responses/CollisionsuccessResponse'
        default:
          $ref: '#/components/responses/CollisionFailedResponse'
  User_Trip_id_Collisions_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: >-
        Returns the set of Collisions that occurred for a given vehicle (id) and
        a speific Trip (tid) during the timestamp ranges and bounded by an index
        range.
      operationId: getUserCollisionsByTripId
      parameters:
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Collision_read
            - Trip_read
      responses:
        '200':
          $ref: '#/components/responses/CollisionsSuccessResponse'
        default:
          $ref: '#/components/responses/CollisionFailedResponse'
  User_Trip_id_Alerts_id_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: Returns information about a specific alert messages for a given Trip.
      operationId: getUserTripAlertByAid
      parameters:
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/alertId'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - alert_read
            - Trip_read
      responses:
        '200':
          $ref: '#/components/responses/AlertsucessResponse'
        default:
          $ref: '#/components/responses/AlertFailedResponse'
  User_Trip_id_Alerts_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: Returns the latest alert messages during a Trip.
      operationId: getUserTripAlerts
      parameters:
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
        - name: locale
          in: query
          description: >-
            Locale is used for rendering text, correctly displaying regional
            monetary values, time and date formats.
          required: false
          schema:
            type: string
      security:
        - Vehicle_auth:
            - alert_read
            - Trip_read
      responses:
        '200':
          $ref: '#/components/responses/AlertsucessResponses'
        default:
          $ref: '#/components/responses/AlertFailedResponse'
  Vehicle_id_Trip_id_Telemetry_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: >-
        Returns the set of Telemetry values that occurred for a given vehicle
        (id) and a speific Trip (tid) during the timestamp ranges and bounded by
        an index range.
      operationId: getTelemetryForTrip
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
        - $ref: '#/components/parameters/telemetryType'
        - $ref: '#/components/parameters/extension'
      security:
        - Vehicle_auth:
            - Trip_read
      responses:
        '200':
          $ref: '#/components/responses/TelemetrySuccessResponse'
        default:
          $ref: '#/components/responses/TelemetryFailedResponse'
  Vehicle_id_Trip_id_wayPoints_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: Gives the Vehicle's wayPoints for a specified Trip.
      operationId: getPathForTrip
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/tolerence'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Trip_read
      responses:
        '200':
          description: Path response
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WayPoints'
        default:
          description: wayPoints not found
  Vehicle_id_Trip_id_Collisions_id_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: >-
        Returns the Collision(cid) that occurred for a given vehicle(id) during
        a Trip(tid) .
      operationId: getVehicleCollisionByTipById
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/collisionId'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Collision_read
            - Vehicle_read
            - Trip_read
      responses:
        '200':
          $ref: '#/components/responses/CollisionsuccessResponse'
        default:
          $ref: '#/components/responses/CollisionFailedResponse'
  Vehicle_id_Trip_id_Collisions_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: >-
        Returns the set of Collisions that occurred for a given vehicle (id) and
        a speific Trip (tid) during the timestamp ranges and bounded by an index
        range.
      operationId: getVehicleCollisionsByTripId
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Collision_read
            - Vehicle_read
            - Trip_read
      responses:
        '200':
          $ref: '#/components/responses/CollisionsSuccessResponse'
        default:
          $ref: '#/components/responses/CollisionFailedResponse'
  Vehicle_id_Trip_id_Alerts_id_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: >-
        Returns information about a specific alert messages for a given Vehicle
        and Trip.
      operationId: getVehicleTripAlertByAid
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/alertId'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - alert_read
            - Vehicle_read
            - Trip_read
      responses:
        '200':
          $ref: '#/components/responses/AlertsucessResponse'
        default:
          $ref: '#/components/responses/AlertFailedResponse'
  Vehicle_id_Trip_id_Alerts_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: Returns the latest alert messages for a Vehicle.
      operationId: getVehicleTripAlerts
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
        - name: locale
          in: query
          description: >-
            Locale is used for rendering text, correctly displaying regional
            monetary values, time and date formats.
          required: false
          schema:
            type: string
      security:
        - Vehicle_auth:
            - alert_read
            - Vehicle_read
            - Trip_read
      responses:
        '200':
          $ref: '#/components/responses/AlertsucessResponses'
        default:
          $ref: '#/components/responses/AlertFailedResponse'
  User_Trip_id_ECoaching_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: Return the User Trip ECoaching evaluation.
      operationId: getTripsByVehicle
      parameters:
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
        - $ref: '#/components/parameters/locale'
      security:
        - Vehicle_auth:
            - Trip_read
      responses:
        '200':
          $ref: '#/components/responses/ECoaching200ErroResponse'
        default:
          $ref: '#/components/responses/ECoachingFailedResponse'
  Vehicle_id_Trip_id_ECoaching_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: Return the Trip ECoaching evaluation.
      operationId: getTripsByVehicle
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
        - $ref: '#/components/parameters/locale'
      security:
        - Vehicle_auth:
            - Trip_read
            - Vehicle_read
      responses:
        '200':
          $ref: '#/components/responses/ECoaching200ErroResponse'
        default:
          $ref: '#/components/responses/ECoachingFailedResponse'
  User_Trip_id_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: >-
        This method returns the Trip that matches the Trip id (tid) User has
        taken.
      operationId: getTripsByVehicle
      parameters:
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Trip_read
      responses:
        '200':
          $ref: '#/components/responses/TripsucessResponse'
        default:
          $ref: '#/components/responses/TripFailedResponse'
  Vehicle_id_Trip_id:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: >-
        This method returns the Trip that matches the Trip id (tid) a given
        Vehicle (id) has taken.
      operationId: getTripByVehicle
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Trip_read
            - Vehicle_read
      responses:
        '200':
          $ref: '#/components/responses/TripsucessResponse'
        default:
          $ref: '#/components/responses/TripFailedResponse'
  Vehicle_id_Trips:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: >-
        This method returns a list of all Trips that a given Vehicle has taken.
        This will NOT include Trips that have not yet been completed.
      operationId: getTripsByVehicle
      parameters:
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Trip_read
            - Vehicle_read
      responses:
        '200':
          $ref: '#/components/responses/TripsSuccessResponses'
        default:
          $ref: '#/components/responses/TripFailedResponse'
  User_Trips_getter:
    get:
      deprecated: true
      summary: OUT OF 1ST RELEASE (R-LEV 1.1) SCOPE
      tags:
        - Trips
      description: >-
        This method returns a list of all Trips the User has taken. This will
        NOT include Trips that have not yet been completed.
      operationId: getUserTrips
      parameters:
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/tokenAuth'
        - $ref: '#/components/parameters/apiClientId'
      security:
        - Vehicle_auth:
            - Trip_read
      responses:
        '200':
          $ref: '#/components/responses/TripsSuccessResponses'
        default:
          $ref: '#/components/responses/TripFailedResponse'
  general_error_fragment:
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/xError'
